{"version":3,"sources":["services/BaseService.js","components/PokemonCard/PokemonCard.js","svg/svg.js","context/PokemonContext.js","components/PokemonList/PokemonList.js","components/PokemonHeader/PokemonHeader.js","components/PokemonTypes/PokemonTypes.js","components/PokemonStats/PokemonStats.js","components/PokemonMoves/PokemonMoves.js","components/PokemonDetail/PokemonDetail.js","reducer/PokemonReducer.js","App.js","serviceWorker.js","index.js"],"names":["baseService","this","http","axios","create","baseURL","interceptors","response","use","success","error","url","get","data","config","post","put","delete","PokemonCard","pokemon","handleSetMyPokemonList","loading","isSelected","history","useHistory","className","onClick","push","name","e","stopPropagation","xmlns","version","width","height","viewBox","d","PokemonContext","createContext","usePokemonValue","useContext","TabPane","Tabs","PokemonList","pokemons","dispatch","limit","noMoreRequest","offset","pokemonList","myList","useEffect","a","result","type","payload","results","next","fetchPokemonList","window","addEventListener","handleOnScroll","removeEventListener","scrollTop","document","documentElement","body","scrollHeight","clientHeight","innerHeight","Math","ceil","myPokemon","findIndex","list","filter","tab","key","map","x","PokemonHeader","img","src","alt","toUpperCase","PokemonTypes","types","PokemonStats","stats","stat","percent","base_stat","showInfo","PokemonMoves","moves","move","PokemonDetail","useState","setLoading","setImg","setTypes","setStats","setMoves","params","useParams","sprites","front_default","slice","fetchPokemonDetails","initialState","reducer","state","action","App","useReducer","Provider","value","exact","path","component","Boolean","location","hostname","match","root","getElementById","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iTAmCMA,EAAc,I,WAhClB,aAAe,oBACbC,KAAKC,KAAOC,IAAMC,OAAO,CACvBC,QAAS,+BAGXJ,KAAKC,KAAKI,aAAaC,SAASC,KAC9B,SAAAC,GACE,OAAOA,KAET,SAAAC,O,yFAMMC,G,0FACDV,KAAKC,KAAKU,IAAID,I,2KAGZA,EAAKE,EAAMC,G,0FACbb,KAAKC,KAAKa,KAAKJ,EAAKE,EAAMC,I,8KAGzBH,EAAKE,EAAMC,G,0FACZb,KAAKC,KAAKc,IAAIL,EAAKE,EAAMC,I,iLAGrBH,EAAKG,G,0FACTb,KAAKC,KAAKe,OAAON,EAAKG,I,0HCSlBI,EAnCK,SAAC,GAKd,IAJLC,EAII,EAJJA,QACAC,EAGI,EAHJA,uBACAC,EAEI,EAFJA,QACAC,EACI,EADJA,WAEMC,EAAUC,cAmBhB,OACE,kBAAC,IAAD,CAAMC,UAAU,eAAeC,QAlBV,WACrBH,EAAQI,KAAR,mBAAyBR,EAAQS,QAiBuBP,QAASA,GAC/D,yBAAKI,UAAU,sBAAsBN,EAAQS,MAC7C,yBAAKH,UAAU,oBAAoBC,QAhBf,SAAAG,GACtBA,EAAEC,kBACFV,EAAuBD,KAInBG,ECLJ,yBACES,MAAM,6BACNC,QAAQ,MACRC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BAAMC,EAAE,qQArBV,yBACEL,MAAM,6BACNC,QAAQ,MACRC,MAAM,KACNC,OAAO,KACPC,QAAQ,aAER,0BAAMC,EAAE,+RCTDC,EAAiBC,0BACjBC,EAAkB,kBAAMC,qBAAWH,I,QCIxCI,EAAYC,IAAZD,QAwHOE,EAtHK,WAAO,IAAD,EACOJ,IAAvBK,EADgB,EAChBA,SAAUC,EADM,EACNA,SAEhBxB,EAMEuB,EANFvB,QACAyB,EAKEF,EALFE,MACAC,EAIEH,EAJFG,cACAC,EAGEJ,EAHFI,OACAC,EAEEL,EAFFK,YACAC,EACEN,EADFM,OAGFC,qBAAU,WAAM,4CACd,4BAAAC,EAAA,sEACuBpD,EAAYY,IAAZ,yBACDoC,EADC,kBACeF,IAFtC,OACQO,EADR,OAIER,EAAS,CACPS,KAAM,kBACNC,QAAQ,YAAKF,EAAOxC,KAAK2C,WAE3BX,EAAS,CACPS,KAAM,oBACNC,SAASF,EAAOxC,KAAK4C,OAVzB,4CADc,sBAcTV,IACHF,EAAS,CACPS,KAAM,cACNC,SAAS,IAjBE,WAAD,wBAmBZG,GACAb,EAAS,CACPS,KAAM,cACNC,SAAS,OAGZ,CAACP,IAEJG,qBAAU,WAER,OADAQ,OAAOC,iBAAiB,SAAUC,GAC3B,WACLF,OAAOG,oBAAoB,SAAUD,OAIzC,IAAMA,EAAiB,WACrB,IAAME,EACHC,SAASC,iBAAmBD,SAASC,gBAAgBF,WACtDC,SAASE,KAAKH,UACVI,EACHH,SAASC,iBAAmBD,SAASC,gBAAgBE,cACtDH,SAASE,KAAKC,aACVC,EACJJ,SAASC,gBAAgBG,cAAgBT,OAAOU,YAEhDC,KAAKC,KAAKR,EAAYK,IAAiBD,GAEvCtB,EAAS,CACPS,KAAM,aACNC,QAASP,EAASF,KAMlB1B,EAAyB,SAAAoD,GAC7B,IAAsE,IAAlEtB,EAAOuB,WAAU,SAAAtD,GAAO,OAAIA,EAAQS,OAAS4C,EAAU5C,QACzDiB,EAAS,CACPS,KAAM,aACNC,QAAQ,GAAD,mBAAML,GAAN,CAAcsB,UAElB,CACL,IAAME,EAAOxB,EAAOyB,QAAO,SAAAxD,GAAO,OAAIA,EAAQS,OAAS4C,EAAU5C,QACjEiB,EAAS,CACPS,KAAM,aACNC,QAAQ,YAAKmB,OAKnB,OACE,oCACE,kBAAC,IAAD,KACE,kBAACjC,EAAD,CAASmC,IAAI,eAAeC,IAAI,eAC9B,yBAAKpD,UAAU,0BACZwB,EAAY6B,KAAI,SAAA3D,GAAO,OACtB,kBAAC,EAAD,CACEE,QAASA,EACTwD,IAAK1D,EAAQS,KACbT,QAASA,EACTG,YACsD,IAApD4B,EAAOuB,WAAU,SAAAM,GAAC,OAAIA,EAAEnD,OAAST,EAAQS,QAI3CR,uBAAwBA,SAKhC,kBAACqB,EAAD,CAASmC,IAAI,UAAUC,IAAI,UACzB,yBAAKpD,UAAU,0BACZyB,EAAO4B,KAAI,SAAA3D,GAAO,OACjB,kBAAC,EAAD,CACEE,QAASA,EACTwD,IAAK1D,EAAQS,KACbT,QAASA,EACTG,YAAY,EACZF,uBAAwBA,YCxGzB4D,EAXO,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,IAAKrD,EAAW,EAAXA,KAC5B,OACE,yBAAKH,UAAU,kBACb,yBAAKA,UAAU,iCACb,yBAAKyD,IAAKD,EAAKE,IAAKvD,KAEtB,yBAAKH,UAAU,wBAAwBG,EAAKwD,iBCSnCC,EAfM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,oCACE,oCACA,yBAAK7D,UAAU,mBACZ6D,EAAMR,KAAI,SAAAxB,GAAI,OACb,yBAAK7B,UAAU,wBAAwBoD,IAAKvB,EAAKA,KAAK1B,MACnD0B,EAAKA,KAAK1B,Y,SCgBR2D,EAtBM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,oCACE,qCACA,yBAAK/D,UAAU,mBACZ+D,EAAMV,KAAI,SAAAW,GAAI,OACb,yBAAKZ,IAAKY,EAAKA,KAAK7D,KAAMH,UAAU,0BAClC,yBAAKA,UAAU,gCAAgCgE,EAAKA,KAAK7D,MACzD,yBAAKH,UAAU,oCACb,kBAAC,IAAD,CAAUiE,QAASD,EAAKE,UAAWC,UAAU,IAC7C,8BAAOH,EAAKE,UAAZ,MAEF,yBAAKlE,UAAU,sCACZgE,EAAKE,UADR,YCEGE,EAfM,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACtB,OACE,oCACE,qCACA,yBAAKrE,UAAU,mBACZqE,EAAMhB,KAAI,SAAAiB,GAAI,OACb,yBAAKlB,IAAKkB,EAAKA,KAAKnE,KAAMH,UAAU,yBACjCsE,EAAKA,KAAKnE,YCmDRoE,EAlDO,WAAO,IAAD,EACKzD,IAAbM,GADQ,EAClBD,SADkB,EACRC,UADQ,EAEIoD,oBAAS,GAFb,mBAEnB5E,EAFmB,KAEV6E,EAFU,OAGJD,mBAAS,IAHL,mBAGnBhB,EAHmB,KAGdkB,EAHc,OAIAF,mBAAS,IAJT,mBAInBX,EAJmB,KAIZc,EAJY,OAKAH,mBAAS,IALT,mBAKnBT,EALmB,KAKZa,EALY,OAMAJ,mBAAS,IANT,mBAMnBH,EANmB,KAMZQ,EANY,KAOpBC,EAASC,cACTjF,EAAUC,cAEhB2B,qBAAU,WAAM,4CACd,sCAAAC,EAAA,sEACuBpD,EAAYY,IAAZ,kBAA2B2F,EAAO3E,OADzD,OACQyB,EADR,SAE2CA,EAAOxC,KAAxC4F,EAFV,EAEUA,QAASjB,EAFnB,EAEmBA,MAAOM,EAF1B,EAE0BA,MAAOR,EAFjC,EAEiCA,MAC/Ba,EAAOM,EAAQC,eACfN,EAASd,GACTe,EAASb,GACTc,EAASR,EAAMa,MAAM,EAAG,IAN1B,4CADc,sBASdT,GAAW,GATI,WAAD,wBAUdU,GACAV,GAAW,GACXrD,EAAS,CACPS,KAAM,wBAEP,CAACiD,EAAO3E,OAMX,OACE,kBAAC,IAAD,CAAMH,UAAU,2BAA2BJ,QAASA,GAClD,yBACEI,UAAU,2CACVC,QARS,WACbH,EAAQI,KAAR,cAKE,cAMA,kBAAC,EAAD,CAAesD,IAAKA,EAAKrD,KAAM2E,EAAO3E,OACtC,yBAAKH,UAAU,oBACf,kBAAC,EAAD,CAAc6D,MAAOA,IACrB,yBAAK7D,UAAU,oBACf,kBAAC,EAAD,CAAc+D,MAAOA,IACrB,yBAAK/D,UAAU,oBACf,kBAAC,EAAD,CAAcqE,MAAOA,M,QCvDde,EAAe,CAC1BxF,SAAS,EACT0B,eAAe,EACfC,OAAQ,EACRF,MAAO,GACPG,YAAa,GACbC,OAAQ,IAGG4D,EAAU,SAACC,EAAOC,GAC7B,OAAQA,EAAO1D,MACb,IAAK,cACH,OAAO,eACFyD,EADL,CAEE1F,QAAS2F,EAAOzD,UAEpB,IAAK,oBACH,OAAO,eACFwD,EADL,CAEEhE,cAAeiE,EAAOzD,UAE1B,IAAK,aACH,OAAO,eACFwD,EADL,CAEE/D,OAAQgE,EAAOzD,UAEnB,IAAK,kBACH,OAAO,eACFwD,EADL,CAEE9D,YAAY,GAAD,mBAAM8D,EAAM9D,aAAZ,YAA4B+D,EAAOzD,YAElD,IAAK,aACH,OAAO,eACFwD,EADL,CAEE7D,OAAO,YAAK8D,EAAOzD,WAEvB,IAAK,oBACH,OAAO,eACFwD,EADL,CAEE/D,OAAQ,EACRC,YAAa,KAEjB,QACE,OAAO8D,ICxBEE,EAZH,WAAO,IAAD,EACaC,qBAAWJ,EAASD,GADjC,mBACTjE,EADS,KACCC,EADD,KAEhB,OACE,oCACE,kBAACR,EAAe8E,SAAhB,CAAyBC,MAAO,CAAExE,WAAUC,aAC1C,kBAAC,IAAD,CAAOwE,OAAK,EAACC,KAAK,WAAWC,UAAW5E,IACxC,kBAAC,IAAD,CAAO0E,OAAK,EAACC,KAAK,iBAAiBC,UAAWvB,O,QCDlCwB,QACW,cAA7B7D,OAAO8D,SAASC,UAEe,UAA7B/D,OAAO8D,SAASC,UAEhB/D,OAAO8D,SAASC,SAASC,MACvB,2DCVN,IAAMC,EAAO5D,SAAS6D,eAAe,QAErCC,IAASC,OACP,kBAAC,IAAD,KACE,kBAAC,EAAD,OAEFH,GDqHI,kBAAmBI,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.66c259c3.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nclass BaseService {\r\n  constructor() {\r\n    this.http = axios.create({\r\n      baseURL: \"https://pokeapi.co/api/v2/\"\r\n    });\r\n\r\n    this.http.interceptors.response.use(\r\n      success => {\r\n        return success;\r\n      },\r\n      error => {\r\n        // handle errors\r\n      }\r\n    );\r\n  }\r\n\r\n  async get(url) {\r\n    return this.http.get(url);\r\n  }\r\n\r\n  async post(url, data, config) {\r\n    return this.http.post(url, data, config);\r\n  }\r\n\r\n  async put(url, data, config) {\r\n    return this.http.put(url, data, config);\r\n  }\r\n\r\n  async delete(url, config) {\r\n    return this.http.delete(url, config);\r\n  }\r\n}\r\n\r\nconst baseService = new BaseService();\r\n\r\nexport { baseService };\r\n","import React from \"react\";\r\nimport { Card } from \"antd\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { likeEmpty, likeFilled } from \"../../svg/svg\";\r\n\r\nconst PokemonCard = ({\r\n  pokemon,\r\n  handleSetMyPokemonList,\r\n  loading,\r\n  isSelected\r\n}) => {\r\n  const history = useHistory();\r\n\r\n  const gotoDetailPage = () => {\r\n    history.push(`/pokemon/${pokemon.name}`);\r\n  };\r\n\r\n  const handleLikeClick = e => {\r\n    e.stopPropagation();\r\n    handleSetMyPokemonList(pokemon);\r\n  };\r\n\r\n  const renderSvg = () => {\r\n    if (isSelected) {\r\n      return likeFilled();\r\n    } else {\r\n      return likeEmpty();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card className=\"pokemon-card\" onClick={gotoDetailPage} loading={loading}>\r\n      <div className=\"pokemon-card__name\">{pokemon.name}</div>\r\n      <div className=\"pokemon-card__svg\" onClick={handleLikeClick}>\r\n        {renderSvg()}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PokemonCard;\r\n","import React from \"react\";\r\n\r\nexport const likeEmpty = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path d=\"M5,9V21H1V9H5M9,21A2,2 0 0,1 7,19V9C7,8.45 7.22,7.95 7.59,7.59L14.17,1L15.23,2.06C15.5,2.33 15.67,2.7 15.67,3.11L15.64,3.43L14.69,8H21C22.11,8 23,8.9 23,10V12C23,12.26 22.95,12.5 22.86,12.73L19.84,19.78C19.54,20.5 18.83,21 18,21H9M9,19H18.03L21,12V10H12.21L13.34,4.68L9,9.03V19Z\" />\r\n    </svg>\r\n  );\r\n};\r\n\r\nexport const likeFilled = () => {\r\n  return (\r\n    <svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      version=\"1.1\"\r\n      width=\"24\"\r\n      height=\"24\"\r\n      viewBox=\"0 0 24 24\"\r\n    >\r\n      <path d=\"M23,10C23,8.89 22.1,8 21,8H14.68L15.64,3.43C15.66,3.33 15.67,3.22 15.67,3.11C15.67,2.7 15.5,2.32 15.23,2.05L14.17,1L7.59,7.58C7.22,7.95 7,8.45 7,9V19A2,2 0 0,0 9,21H18C18.83,21 19.54,20.5 19.84,19.78L22.86,12.73C22.95,12.5 23,12.26 23,12V10M1,21H5V9H1V21Z\" />\r\n    </svg>\r\n  );\r\n};\r\n","import { createContext, useContext } from \"react\";\r\n\r\nexport const PokemonContext = createContext();\r\nexport const usePokemonValue = () => useContext(PokemonContext);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { baseService } from \"../../services/BaseService\";\r\nimport PokemonCard from \"../PokemonCard/PokemonCard\";\r\nimport { usePokemonValue } from \"../../context/PokemonContext\";\r\n\r\nimport { Tabs } from \"antd\";\r\n\r\nconst { TabPane } = Tabs;\r\n\r\nconst PokemonList = () => {\r\n  const { pokemons, dispatch } = usePokemonValue();\r\n  const {\r\n    loading,\r\n    limit,\r\n    noMoreRequest,\r\n    offset,\r\n    pokemonList,\r\n    myList\r\n  } = pokemons;\r\n\r\n  useEffect(() => {\r\n    async function fetchPokemonList() {\r\n      const result = await baseService.get(\r\n        `pokemon?offset=${offset}&limit=${limit}`\r\n      );\r\n      dispatch({\r\n        type: \"set_pokemonList\",\r\n        payload: [...result.data.results]\r\n      });\r\n      dispatch({\r\n        type: \"set_noMoreRequest\",\r\n        payload: result.data.next ? false : true\r\n      });\r\n    }\r\n    if (!noMoreRequest) {\r\n      dispatch({\r\n        type: \"set_loading\",\r\n        payload: true\r\n      });\r\n      fetchPokemonList();\r\n      dispatch({\r\n        type: \"set_loading\",\r\n        payload: false\r\n      });\r\n    }\r\n  }, [offset]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", handleOnScroll);\r\n    return () => {\r\n      window.removeEventListener(\"scroll\", handleOnScroll);\r\n    };\r\n  });\r\n\r\n  const handleOnScroll = () => {\r\n    const scrollTop =\r\n      (document.documentElement && document.documentElement.scrollTop) ||\r\n      document.body.scrollTop;\r\n    const scrollHeight =\r\n      (document.documentElement && document.documentElement.scrollHeight) ||\r\n      document.body.scrollHeight;\r\n    const clientHeight =\r\n      document.documentElement.clientHeight || window.innerHeight;\r\n    const scrolledToBottom =\r\n      Math.ceil(scrollTop + clientHeight) >= scrollHeight;\r\n    if (scrolledToBottom) {\r\n      dispatch({\r\n        type: \"set_offset\",\r\n        payload: offset + limit\r\n      });\r\n      return;\r\n    }\r\n  };\r\n\r\n  const handleSetMyPokemonList = myPokemon => {\r\n    if (myList.findIndex(pokemon => pokemon.name === myPokemon.name) === -1) {\r\n      dispatch({\r\n        type: \"set_myList\",\r\n        payload: [...myList, myPokemon]\r\n      });\r\n    } else {\r\n      const list = myList.filter(pokemon => pokemon.name !== myPokemon.name);\r\n      dispatch({\r\n        type: \"set_myList\",\r\n        payload: [...list]\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Tabs>\r\n        <TabPane tab=\"Pokemon List\" key=\"pokemonList\">\r\n          <div className=\"pokemon-list-container\">\r\n            {pokemonList.map(pokemon => (\r\n              <PokemonCard\r\n                loading={loading}\r\n                key={pokemon.name}\r\n                pokemon={pokemon}\r\n                isSelected={\r\n                  myList.findIndex(x => x.name === pokemon.name) === -1\r\n                    ? false\r\n                    : true\r\n                }\r\n                handleSetMyPokemonList={handleSetMyPokemonList}\r\n              />\r\n            ))}\r\n          </div>\r\n        </TabPane>\r\n        <TabPane tab=\"My List\" key=\"myList\">\r\n          <div className=\"pokemon-list-container\">\r\n            {myList.map(pokemon => (\r\n              <PokemonCard\r\n                loading={loading}\r\n                key={pokemon.name}\r\n                pokemon={pokemon}\r\n                isSelected={true}\r\n                handleSetMyPokemonList={handleSetMyPokemonList}\r\n              />\r\n            ))}\r\n          </div>\r\n        </TabPane>\r\n      </Tabs>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonList;\r\n","import React from \"react\";\r\n\r\nconst PokemonHeader = ({ img, name }) => {\r\n  return (\r\n    <div className=\"pokemon-header\">\r\n      <div className=\"pokemon-header__img-container\">\r\n        <img src={img} alt={name} />\r\n      </div>\r\n      <div className=\"pokemon-header__name\">{name.toUpperCase()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PokemonHeader;\r\n","import React from \"react\";\r\n\r\nconst PokemonTypes = ({ types }) => {\r\n  return (\r\n    <>\r\n      <h4>TYPE</h4>\r\n      <div className=\"types-container\">\r\n        {types.map(type => (\r\n          <div className=\"types-container__type\" key={type.type.name}>\r\n            {type.type.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonTypes;\r\n","import React from \"react\";\r\nimport { Progress } from \"antd\";\r\n\r\nconst PokemonStats = ({ stats }) => {\r\n  return (\r\n    <>\r\n      <h4>STATS</h4>\r\n      <div className=\"stats-container\">\r\n        {stats.map(stat => (\r\n          <div key={stat.stat.name} className=\"stats-container__stats\">\r\n            <div className=\"stats-container__stats__name\">{stat.stat.name}</div>\r\n            <div className=\"stats-container__stats__progress\">\r\n              <Progress percent={stat.base_stat} showInfo={false} />\r\n              <span>{stat.base_stat}%</span>\r\n            </div>\r\n            <div className=\"stats-container__stats__percentage\">\r\n              {stat.base_stat}%\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonStats;\r\n","import React from \"react\";\r\n\r\nconst PokemonMoves = ({ moves }) => {\r\n  return (\r\n    <>\r\n      <h4>MOVES</h4>\r\n      <div className=\"moves-container\">\r\n        {moves.map(move => (\r\n          <div key={move.move.name} className=\"moves-container__move\">\r\n            {move.move.name}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PokemonMoves;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport PokemonHeader from \"../PokemonHeader/PokemonHeader\";\r\nimport PokemonTypes from \"../PokemonTypes/PokemonTypes\";\r\nimport PokemonStats from \"../PokemonStats/PokemonStats\";\r\nimport PokemonMoves from \"../PokemonMoves/PokemonMoves\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { baseService } from \"../../services/BaseService\";\r\nimport { usePokemonValue } from \"../../context/PokemonContext\";\r\n\r\nconst PokemonDetail = () => {\r\n  const { pokemons, dispatch } = usePokemonValue();\r\n  const [loading, setLoading] = useState(false);\r\n  const [img, setImg] = useState(\"\");\r\n  const [types, setTypes] = useState([]);\r\n  const [stats, setStats] = useState([]);\r\n  const [moves, setMoves] = useState([]);\r\n  const params = useParams();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    async function fetchPokemonDetails() {\r\n      const result = await baseService.get(`pokemon/${params.name}`);\r\n      const { sprites, stats, moves, types } = result.data;\r\n      setImg(sprites.front_default);\r\n      setTypes(types);\r\n      setStats(stats);\r\n      setMoves(moves.slice(0, 5));\r\n    }\r\n    setLoading(true);\r\n    fetchPokemonDetails();\r\n    setLoading(false);\r\n    dispatch({\r\n      type: \"clear_pokemonList\"\r\n    });\r\n  }, [params.name]);\r\n\r\n  const goBack = () => {\r\n    history.push(`/pokemon`);\r\n  };\r\n\r\n  return (\r\n    <Card className=\"pokemon-detail-container\" loading={loading}>\r\n      <div\r\n        className=\"pokemon-detail-container__go-back-button\"\r\n        onClick={goBack}\r\n      >\r\n        Go to list\r\n      </div>\r\n      <PokemonHeader img={img} name={params.name} />\r\n      <div className=\"horizontal-line\" />\r\n      <PokemonTypes types={types} />\r\n      <div className=\"horizontal-line\" />\r\n      <PokemonStats stats={stats} />\r\n      <div className=\"horizontal-line\" />\r\n      <PokemonMoves moves={moves} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PokemonDetail;\r\n","export const initialState = {\r\n  loading: false,\r\n  noMoreRequest: false,\r\n  offset: 0,\r\n  limit: 20,\r\n  pokemonList: [],\r\n  myList: []\r\n};\r\n\r\nexport const reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"set_loading\":\r\n      return {\r\n        ...state,\r\n        loading: action.payload\r\n      };\r\n    case \"set_noMoreRequest\":\r\n      return {\r\n        ...state,\r\n        noMoreRequest: action.payload\r\n      };\r\n    case \"set_offset\":\r\n      return {\r\n        ...state,\r\n        offset: action.payload\r\n      };\r\n    case \"set_pokemonList\":\r\n      return {\r\n        ...state,\r\n        pokemonList: [...state.pokemonList, ...action.payload]\r\n      };\r\n    case \"set_myList\":\r\n      return {\r\n        ...state,\r\n        myList: [...action.payload]\r\n      };\r\n    case \"clear_pokemonList\":\r\n      return {\r\n        ...state,\r\n        offset: 0,\r\n        pokemonList: []\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport PokemonList from \"./components/PokemonList/PokemonList\";\nimport PokemonDetail from \"./components/PokemonDetail/PokemonDetail\";\nimport { PokemonContext } from \"./context/PokemonContext\";\nimport { reducer, initialState } from \"./reducer/PokemonReducer\";\n\nconst App = () => {\n  const [pokemons, dispatch] = useReducer(reducer, initialState);\n  return (\n    <>\n      <PokemonContext.Provider value={{ pokemons, dispatch }}>\n        <Route exact path=\"/pokemon\" component={PokemonList} />\n        <Route exact path=\"/pokemon/:name\" component={PokemonDetail} />\n      </PokemonContext.Provider>\n    </>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"antd/dist/antd.css\";\nimport \"./styles/index.scss\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst root = document.getElementById(\"root\");\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  root\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}